// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 15.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace BehaviorTests
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// LoginTest - Use 'LoginTestParams' to pass parameters into this method.
        /// </summary>
        public void LoginTest()
        {
            #region Variable Declarations
            WpfEdit uITxtUsernameEdit = this.UICapstoneEmployeeScheWindow.UITxtUsernameEdit;
            WpfText uIPASSWORDText = this.UICapstoneEmployeeScheWindow.UIPASSWORDText;
            WpfEdit uITxtPasswordEdit = this.UICapstoneEmployeeScheWindow.UITxtPasswordEdit;
            WpfButton uISUBMITButton = this.UICapstoneEmployeeScheWindow.UISUBMITButton;
            #endregion

            // Launch '%USERPROFILE%\Desktop\CapstoneEmployeeScheduler.exe'
            ApplicationUnderTest uICapstoneEmployeeScheWindow = ApplicationUnderTest.Launch(this.LoginTestParams.UICapstoneEmployeeScheWindowExePath, this.LoginTestParams.UICapstoneEmployeeScheWindowAlternateExePath);

            // Type 'admin' in 'txtUsername' text box
            uITxtUsernameEdit.Text = this.LoginTestParams.UITxtUsernameEditText;

            // Click 'PASSWORD' label
            Mouse.Click(uIPASSWORDText, new Point(45, 4));

            // Type '********' in 'txtPassword' text box
            Keyboard.SendKeys(uITxtPasswordEdit, this.LoginTestParams.UITxtPasswordEditSendKeys, true);

            // Click 'SUBMIT' button
            Mouse.Click(uISUBMITButton, new Point(42, 20));
        }
        
        /// <summary>
        /// NavigatingPages - Use 'NavigatingPagesParams' to pass parameters into this method.
        /// </summary>
        public void NavigatingPages()
        {
            #region Variable Declarations
            WpfText uIUSERNAMEText = this.UICapstoneEmployeeScheWindow.UIUSERNAMEText;
            WpfEdit uITxtUsernameEdit = this.UICapstoneEmployeeScheWindow.UITxtUsernameEdit;
            WpfEdit uITxtPasswordEdit = this.UICapstoneEmployeeScheWindow.UITxtPasswordEdit;
            WpfButton uISUBMITButton = this.UICapstoneEmployeeScheWindow.UISUBMITButton;
            WpfButton uIGenerateScheduleButton = this.UICapstoneEmployeeScheWindow1.UIMainPane.UIGenerateScheduleButton;
            WinButton uIOKButton = this.UIGenerateScheduleWindow.UIOKWindow.UIOKButton;
            WpfButton uIHISTORYButton = this.UICapstoneEmployeeScheWindow1.UIHISTORYButton;
            WpfButton uIHOMEButton = this.UICapstoneEmployeeScheWindow1.UIHOMEButton;
            WpfButton uIEMPLOYEESButton = this.UICapstoneEmployeeScheWindow1.UIEMPLOYEESButton;
            WpfButton uIROLESButton = this.UICapstoneEmployeeScheWindow1.UIROLESButton;
            #endregion

            // Launch '%USERPROFILE%\Desktop\CapstoneEmployeeScheduler.exe'
            ApplicationUnderTest uICapstoneEmployeeScheWindow = ApplicationUnderTest.Launch(this.NavigatingPagesParams.UICapstoneEmployeeScheWindowExePath, this.NavigatingPagesParams.UICapstoneEmployeeScheWindowAlternateExePath);

            // Click 'USERNAME' label
            Mouse.Click(uIUSERNAMEText, new Point(73, 8));

            // Type 'admin' in 'txtUsername' text box
            uITxtUsernameEdit.Text = this.NavigatingPagesParams.UITxtUsernameEditText;

            // Click 'txtPassword' text box
            Mouse.Click(uITxtPasswordEdit, new Point(144, 1));

            // Click 'txtPassword' text box
            Mouse.Click(uITxtPasswordEdit, new Point(140, 14));

            // Type '********' in 'txtPassword' text box
            Keyboard.SendKeys(uITxtPasswordEdit, this.NavigatingPagesParams.UITxtPasswordEditSendKeys, true);

            // Click 'SUBMIT' button
            Mouse.Click(uISUBMITButton, new Point(21, 13));

            // Click 'Generate Schedule' button
            Mouse.Click(uIGenerateScheduleButton, new Point(73, 33));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(50, 13));

            // Click 'HISTORY' button
            Mouse.Click(uIHISTORYButton, new Point(66, 32));

            // Click 'HOME' button
            Mouse.Click(uIHOMEButton, new Point(65, 42));

            // Click 'EMPLOYEES' button
            Mouse.Click(uIEMPLOYEESButton, new Point(69, 43));

            // Click 'HOME' button
            Mouse.Click(uIHOMEButton, new Point(46, 28));

            // Click 'ROLES' button
            Mouse.Click(uIROLESButton, new Point(54, 52));

            // Click 'HOME' button
            Mouse.Click(uIHOMEButton, new Point(69, 30));
        }
        
        /// <summary>
        /// Navigating through the application
        /// </summary>
        public void Walkthrough()
        {
            #region Variable Declarations
            WinEdit uINameEdit = this.UIDebugWindow.UIItemWindow.UICapstoneEmployeeScheListItem.UINameEdit;
            WpfEdit uITxtUsernameEdit = this.UICapstoneEmployeeScheWindow.UITxtUsernameEdit;
            WpfEdit uITxtPasswordEdit = this.UICapstoneEmployeeScheWindow.UITxtPasswordEdit;
            WpfButton uISUBMITButton = this.UICapstoneEmployeeScheWindow.UISUBMITButton;
            WpfButton uIHISTORYButton = this.UICapstoneEmployeeScheWindow1.UIHISTORYButton;
            WpfButton uIHOMEButton = this.UICapstoneEmployeeScheWindow1.UIHOMEButton;
            WpfButton uIEMPLOYEESButton = this.UICapstoneEmployeeScheWindow1.UIEMPLOYEESButton;
            WpfButton uIROLESButton = this.UICapstoneEmployeeScheWindow1.UIROLESButton;
            WpfButton uIScheduleButton = this.UICapstoneEmployeeScheWindow1.UIScheduleButton;
            WpfButton uIAdminButton = this.UICapstoneEmployeeScheWindow1.UIAdminButton;
            WpfMenuItem uIEmployeeMenuItem = this.UICapstoneEmployeeScheWindow1.UIItemMenu.UIFileMenuItem.UINewMenuItem.UIEmployeeMenuItem;
            WpfMenuItem uIRoleMenuItem = this.UICapstoneEmployeeScheWindow1.UIItemMenu.UIFileMenuItem.UINewMenuItem.UIRoleMenuItem;
            WpfMenuItem uIViewMenuItem = this.UICapstoneEmployeeScheWindow1.UIItemMenu.UIScheduleMenuItem.UIViewMenuItem;
            WpfMenuItem uINewMenuItem = this.UICapstoneEmployeeScheWindow1.UIItemMenu.UIRolesMenuItem.UINewMenuItem;
            WinButton uICloseButton = this.UICapstoneEmployeeScheWindow2.UICloseButton;
            WpfMenuItem uINewMenuItem1 = this.UICapstoneEmployeeScheWindow1.UIItemMenu.UIEmployeesMenuItem.UINewMenuItem;
            WinButton uICloseButton1 = this.UICapstoneEmployeeScheWindow3.UICloseButton;
            WpfMenuItem uIExportMenuItem = this.UICapstoneEmployeeScheWindow1.UIItemMenu.UIExportMenuItem;
            WpfPane uIMainPane = this.UICapstoneEmployeeScheWindow1.UIMainPane;
            WpfButton uILOGOUTButton = this.UICapstoneEmployeeScheWindow1.UILOGOUTButton;
            WinButton uIOKButton = this.UILogoutSuccessfulWindow.UIOKWindow.UIOKButton;
            #endregion

            // Last mouse action was not recorded.

            // Click 'Name' text box
            Mouse.Click(uINameEdit, new Point(137, 6));

            // Double-Click 'Name' text box
            Mouse.DoubleClick(uINameEdit, new Point(48, 2));

            // Type 'admin' in 'txtUsername' text box
            uITxtUsernameEdit.Text = this.WalkthroughParams.UITxtUsernameEditText;

            // Type '{Tab}' in 'txtUsername' text box
            Keyboard.SendKeys(uITxtUsernameEdit, this.WalkthroughParams.UITxtUsernameEditSendKeys, ModifierKeys.None);

            // Type '********' in 'txtPassword' text box
            Keyboard.SendKeys(uITxtPasswordEdit, this.WalkthroughParams.UITxtPasswordEditSendKeys, true);

            // Click 'SUBMIT' button
            Mouse.Click(uISUBMITButton, new Point(39, 23));

            // Click 'HISTORY' button
            Mouse.Click(uIHISTORYButton, new Point(81, 25));

            // Click 'HOME' button
            Mouse.Click(uIHOMEButton, new Point(67, 39));

            // Click 'EMPLOYEES' button
            Mouse.Click(uIEMPLOYEESButton, new Point(57, 31));

            // Click 'HOME' button
            Mouse.Click(uIHOMEButton, new Point(36, 32));

            // Click 'ROLES' button
            Mouse.Click(uIROLESButton, new Point(61, 33));

            // Click 'HOME' button
            Mouse.Click(uIHOMEButton, new Point(57, 13));

            // Click 'schedule' button
            Mouse.Click(uIScheduleButton, new Point(60, 13));

            // Click 'admin' button
            Mouse.Click(uIAdminButton, new Point(63, 26));

            // Click 'HOME' button
            Mouse.Click(uIHOMEButton, new Point(72, 14));

            // Click 'File' -> 'New' -> 'Employee' menu item
            Mouse.Click(uIEmployeeMenuItem, new Point(36, 5));

            // Click 'File' -> 'New' -> 'Role' menu item
            Mouse.Click(uIRoleMenuItem, new Point(50, 7));

            // Click 'Schedule' -> 'View' menu item
            Mouse.Click(uIViewMenuItem, new Point(52, 6));

            // Click 'Roles' -> 'New' menu item
            Mouse.Click(uINewMenuItem, new Point(32, 1));

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(23, 16));

            // Click 'Employees' -> 'New' menu item
            Mouse.Click(uINewMenuItem1, new Point(60, 6));

            // Click 'Close' button
            Mouse.Click(uICloseButton1, new Point(18, 9));

            // Click 'Export' menu item
            Mouse.Click(uIExportMenuItem, new Point(25, 18));

            // Click 'Main' pane
            Mouse.Click(uIMainPane, new Point(490, 68));

            // Click 'LOGOUT' button
            Mouse.Click(uILOGOUTButton, new Point(11, 26));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(47, 6));
        }
        
        /// <summary>
        /// Testing adding an employee to the database
        /// </summary>
        public void AddEmployee()
        {
            #region Variable Declarations
            WinEdit uINameEdit = this.UIDebugWindow.UIItemWindow.UICapstoneEmployeeScheListItem.UINameEdit;
            WpfEdit uITxtUsernameEdit = this.UICapstoneEmployeeScheWindow.UITxtUsernameEdit;
            WpfEdit uITxtPasswordEdit = this.UICapstoneEmployeeScheWindow.UITxtPasswordEdit;
            WpfButton uIEMPLOYEESButton = this.UICapstoneEmployeeScheWindow1.UIEMPLOYEESButton;
            WpfButton uINewEmployeeButton = this.UICapstoneEmployeeScheWindow1.UIMainPane.UINewEmployeeButton;
            WpfEdit uINameEdit1 = this.UICapstoneEmployeeScheWindow21.UINameEdit;
            WpfEdit uIEmailEdit = this.UICapstoneEmployeeScheWindow21.UIEmailEdit;
            WpfCheckBox uISandwhichMakerCheckBox = this.UICapstoneEmployeeScheWindow21.UIRoleListBoxList.UICapstoneEmployeeScheListItem.UISandwhichMakerCheckBox;
            WpfCheckBox uICashierCheckBox = this.UICapstoneEmployeeScheWindow21.UIRoleListBoxList.UICapstoneEmployeeScheListItem1.UICashierCheckBox;
            WpfCheckBox uIFryStationCheckBox = this.UICapstoneEmployeeScheWindow21.UIRoleListBoxList.UICapstoneEmployeeScheListItem2.UIFryStationCheckBox;
            WpfCheckBox uIManagerCheckBox = this.UICapstoneEmployeeScheWindow21.UIRoleListBoxList.UICapstoneEmployeeScheListItem3.UIManagerCheckBox;
            WpfComboBox uIShiftBoxComboBox = this.UICapstoneEmployeeScheWindow21.UIShiftBoxComboBox;
            WpfButton uISUBMITButton = this.UICapstoneEmployeeScheWindow21.UISUBMITButton;
            #endregion

            // Double-Click 'Name' text box
            Mouse.DoubleClick(uINameEdit, new Point(108, 10));

            // Type 'admin' in 'txtUsername' text box
            uITxtUsernameEdit.Text = this.AddEmployeeParams.UITxtUsernameEditText;

            // Type '{Tab}' in 'txtUsername' text box
            Keyboard.SendKeys(uITxtUsernameEdit, this.AddEmployeeParams.UITxtUsernameEditSendKeys, ModifierKeys.None);

            // Type '********' in 'txtPassword' text box
            Keyboard.SendKeys(uITxtPasswordEdit, this.AddEmployeeParams.UITxtPasswordEditSendKeys, true);

            // Click 'EMPLOYEES' button
            Mouse.Click(uIEMPLOYEESButton, new Point(85, 33));

            // Click 'NewEmployee' button
            Mouse.Click(uINewEmployeeButton, new Point(72, 27));

            // Type 'John Smith' in 'name' text box
            uINameEdit1.Text = this.AddEmployeeParams.UINameEditText;

            // Type 'jsmith@gmail.com' in 'email' text box
            uIEmailEdit.Text = this.AddEmployeeParams.UIEmailEditText;

            // Select 'Sandwhich Maker' check box
            uISandwhichMakerCheckBox.Checked = this.AddEmployeeParams.UISandwhichMakerCheckBoxChecked;

            // Select 'Cashier' check box
            uICashierCheckBox.Checked = this.AddEmployeeParams.UICashierCheckBoxChecked;

            // Select 'Fry Station' check box
            uIFryStationCheckBox.Checked = this.AddEmployeeParams.UIFryStationCheckBoxChecked;

            // Select 'Manager' check box
            uIManagerCheckBox.Checked = this.AddEmployeeParams.UIManagerCheckBoxChecked;

            // Select 'Day Shift' in 'ShiftBox' combo box
            uIShiftBoxComboBox.SelectedItem = this.AddEmployeeParams.UIShiftBoxComboBoxSelectedItem;

            // Click 'SUBMIT' button
            Mouse.Click(uISUBMITButton, new Point(66, 14));
        }
        
        /// <summary>
        /// Testing adding a Role to the database
        /// </summary>
        public void CreateRole()
        {
            #region Variable Declarations
            WinEdit uINameEdit = this.UIDebugWindow.UIItemWindow.UICapstoneEmployeeScheListItem.UINameEdit;
            WpfEdit uITxtUsernameEdit = this.UICapstoneEmployeeScheWindow.UITxtUsernameEdit;
            WpfEdit uITxtPasswordEdit = this.UICapstoneEmployeeScheWindow.UITxtPasswordEdit;
            WpfButton uIROLESButton = this.UICapstoneEmployeeScheWindow1.UIROLESButton;
            WpfButton uINewRoleButton = this.UICapstoneEmployeeScheWindow1.UIMainPane.UINewRoleButton;
            WpfEdit uINameEdit1 = this.UICapstoneEmployeeScheWindow22.UINameEdit;
            WpfText uIMAXPEOPLEPERROLEText = this.UICapstoneEmployeeScheWindow22.UIMAXPEOPLEPERROLEText;
            WpfEdit uIRoleCountBoxEdit = this.UICapstoneEmployeeScheWindow22.UIRoleCountBoxEdit;
            WpfEdit uIDescriptionEdit = this.UICapstoneEmployeeScheWindow22.UIDescriptionEdit;
            WpfButton uISUBMITButton = this.UICapstoneEmployeeScheWindow22.UISUBMITButton;
            #endregion

            // Double-Click 'Name' text box
            Mouse.DoubleClick(uINameEdit, new Point(99, 7));

            // Type 'admin' in 'txtUsername' text box
            uITxtUsernameEdit.Text = this.CreateRoleParams.UITxtUsernameEditText;

            // Type '{Tab}' in 'txtUsername' text box
            Keyboard.SendKeys(uITxtUsernameEdit, this.CreateRoleParams.UITxtUsernameEditSendKeys, ModifierKeys.None);

            // Type '********' in 'txtPassword' text box
            Keyboard.SendKeys(uITxtPasswordEdit, this.CreateRoleParams.UITxtPasswordEditSendKeys, true);

            // Click 'ROLES' button
            Mouse.Click(uIROLESButton, new Point(61, 33));

            // Click 'NewRole' button
            Mouse.Click(uINewRoleButton, new Point(72, 28));

            // Type 'Janitor' in 'name' text box
            uINameEdit1.Text = this.CreateRoleParams.UINameEditText;

            // Double-Click 'MAX PEOPLE PER ROLE:' label
            Mouse.DoubleClick(uIMAXPEOPLEPERROLEText, new Point(183, 19));

            // Type '1' in 'RoleCountBox' text box
            uIRoleCountBoxEdit.Text = this.CreateRoleParams.UIRoleCountBoxEditText;

            // Type 'Cleans the floors and entire store' in 'description' text box
            uIDescriptionEdit.Text = this.CreateRoleParams.UIDescriptionEditText;

            // Click 'SUBMIT' button
            Mouse.Click(uISUBMITButton, new Point(37, 14));
        }
        
        #region Properties
        public virtual LoginTestParams LoginTestParams
        {
            get
            {
                if ((this.mLoginTestParams == null))
                {
                    this.mLoginTestParams = new LoginTestParams();
                }
                return this.mLoginTestParams;
            }
        }
        
        public virtual NavigatingPagesParams NavigatingPagesParams
        {
            get
            {
                if ((this.mNavigatingPagesParams == null))
                {
                    this.mNavigatingPagesParams = new NavigatingPagesParams();
                }
                return this.mNavigatingPagesParams;
            }
        }
        
        public virtual WalkthroughParams WalkthroughParams
        {
            get
            {
                if ((this.mWalkthroughParams == null))
                {
                    this.mWalkthroughParams = new WalkthroughParams();
                }
                return this.mWalkthroughParams;
            }
        }
        
        public virtual AddEmployeeParams AddEmployeeParams
        {
            get
            {
                if ((this.mAddEmployeeParams == null))
                {
                    this.mAddEmployeeParams = new AddEmployeeParams();
                }
                return this.mAddEmployeeParams;
            }
        }
        
        public virtual CreateRoleParams CreateRoleParams
        {
            get
            {
                if ((this.mCreateRoleParams == null))
                {
                    this.mCreateRoleParams = new CreateRoleParams();
                }
                return this.mCreateRoleParams;
            }
        }
        
        public UIWpfWindow UIWpfWindow
        {
            get
            {
                if ((this.mUIWpfWindow == null))
                {
                    this.mUIWpfWindow = new UIWpfWindow();
                }
                return this.mUIWpfWindow;
            }
        }
        
        public UICapstoneEmployeeScheWindow UICapstoneEmployeeScheWindow
        {
            get
            {
                if ((this.mUICapstoneEmployeeScheWindow == null))
                {
                    this.mUICapstoneEmployeeScheWindow = new UICapstoneEmployeeScheWindow();
                }
                return this.mUICapstoneEmployeeScheWindow;
            }
        }
        
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow();
                }
                return this.mUIOKWindow;
            }
        }
        
        public UIGenerateScheduleWindow UIGenerateScheduleWindow
        {
            get
            {
                if ((this.mUIGenerateScheduleWindow == null))
                {
                    this.mUIGenerateScheduleWindow = new UIGenerateScheduleWindow();
                }
                return this.mUIGenerateScheduleWindow;
            }
        }
        
        public UILogoutSuccessfulWindow UILogoutSuccessfulWindow
        {
            get
            {
                if ((this.mUILogoutSuccessfulWindow == null))
                {
                    this.mUILogoutSuccessfulWindow = new UILogoutSuccessfulWindow();
                }
                return this.mUILogoutSuccessfulWindow;
            }
        }
        
        public UICapstoneEmployeeScheWindow1 UICapstoneEmployeeScheWindow1
        {
            get
            {
                if ((this.mUICapstoneEmployeeScheWindow1 == null))
                {
                    this.mUICapstoneEmployeeScheWindow1 = new UICapstoneEmployeeScheWindow1();
                }
                return this.mUICapstoneEmployeeScheWindow1;
            }
        }
        
        public UIDebugWindow UIDebugWindow
        {
            get
            {
                if ((this.mUIDebugWindow == null))
                {
                    this.mUIDebugWindow = new UIDebugWindow();
                }
                return this.mUIDebugWindow;
            }
        }
        
        public UICapstoneEmployeeScheWindow2 UICapstoneEmployeeScheWindow2
        {
            get
            {
                if ((this.mUICapstoneEmployeeScheWindow2 == null))
                {
                    this.mUICapstoneEmployeeScheWindow2 = new UICapstoneEmployeeScheWindow2();
                }
                return this.mUICapstoneEmployeeScheWindow2;
            }
        }
        
        public UICapstoneEmployeeScheWindow3 UICapstoneEmployeeScheWindow3
        {
            get
            {
                if ((this.mUICapstoneEmployeeScheWindow3 == null))
                {
                    this.mUICapstoneEmployeeScheWindow3 = new UICapstoneEmployeeScheWindow3();
                }
                return this.mUICapstoneEmployeeScheWindow3;
            }
        }
        
        public UICapstoneEmployeeScheWindow21 UICapstoneEmployeeScheWindow21
        {
            get
            {
                if ((this.mUICapstoneEmployeeScheWindow21 == null))
                {
                    this.mUICapstoneEmployeeScheWindow21 = new UICapstoneEmployeeScheWindow21();
                }
                return this.mUICapstoneEmployeeScheWindow21;
            }
        }
        
        public UICapstoneEmployeeScheWindow22 UICapstoneEmployeeScheWindow22
        {
            get
            {
                if ((this.mUICapstoneEmployeeScheWindow22 == null))
                {
                    this.mUICapstoneEmployeeScheWindow22 = new UICapstoneEmployeeScheWindow22();
                }
                return this.mUICapstoneEmployeeScheWindow22;
            }
        }
        #endregion
        
        #region Fields
        private LoginTestParams mLoginTestParams;
        
        private NavigatingPagesParams mNavigatingPagesParams;
        
        private WalkthroughParams mWalkthroughParams;
        
        private AddEmployeeParams mAddEmployeeParams;
        
        private CreateRoleParams mCreateRoleParams;
        
        private UIWpfWindow mUIWpfWindow;
        
        private UICapstoneEmployeeScheWindow mUICapstoneEmployeeScheWindow;
        
        private UIOKWindow mUIOKWindow;
        
        private UIGenerateScheduleWindow mUIGenerateScheduleWindow;
        
        private UILogoutSuccessfulWindow mUILogoutSuccessfulWindow;
        
        private UICapstoneEmployeeScheWindow1 mUICapstoneEmployeeScheWindow1;
        
        private UIDebugWindow mUIDebugWindow;
        
        private UICapstoneEmployeeScheWindow2 mUICapstoneEmployeeScheWindow2;
        
        private UICapstoneEmployeeScheWindow3 mUICapstoneEmployeeScheWindow3;
        
        private UICapstoneEmployeeScheWindow21 mUICapstoneEmployeeScheWindow21;
        
        private UICapstoneEmployeeScheWindow22 mUICapstoneEmployeeScheWindow22;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'LoginTest'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class LoginTestParams
    {
        
        #region Fields
        /// <summary>
        /// Launch '%USERPROFILE%\Desktop\CapstoneEmployeeScheduler.exe'
        /// </summary>
        public string UICapstoneEmployeeScheWindowExePath = "C:\\Users\\Da Jew\\Desktop\\CapstoneEmployeeScheduler.exe";
        
        /// <summary>
        /// Launch '%USERPROFILE%\Desktop\CapstoneEmployeeScheduler.exe'
        /// </summary>
        public string UICapstoneEmployeeScheWindowAlternateExePath = "%USERPROFILE%\\Desktop\\CapstoneEmployeeScheduler.exe";
        
        /// <summary>
        /// Type 'admin' in 'txtUsername' text box
        /// </summary>
        public string UITxtUsernameEditText = "admin";
        
        /// <summary>
        /// Type '********' in 'txtPassword' text box
        /// </summary>
        public string UITxtPasswordEditSendKeys = "ltMtR4VOfdZS3D8xaljxesqUwEXKaQEX";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'NavigatingPages'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class NavigatingPagesParams
    {
        
        #region Fields
        /// <summary>
        /// Launch '%USERPROFILE%\Desktop\CapstoneEmployeeScheduler.exe'
        /// </summary>
        public string UICapstoneEmployeeScheWindowExePath = "C:\\Users\\Da Jew\\Desktop\\CapstoneEmployeeScheduler.exe";
        
        /// <summary>
        /// Launch '%USERPROFILE%\Desktop\CapstoneEmployeeScheduler.exe'
        /// </summary>
        public string UICapstoneEmployeeScheWindowAlternateExePath = "%USERPROFILE%\\Desktop\\CapstoneEmployeeScheduler.exe";
        
        /// <summary>
        /// Type 'admin' in 'txtUsername' text box
        /// </summary>
        public string UITxtUsernameEditText = "admin";
        
        /// <summary>
        /// Type '********' in 'txtPassword' text box
        /// </summary>
        public string UITxtPasswordEditSendKeys = "ltMtR4VOfdZS3D8xaljxesqUwEXKaQEX";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Walkthrough'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class WalkthroughParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'admin' in 'txtUsername' text box
        /// </summary>
        public string UITxtUsernameEditText = "admin";
        
        /// <summary>
        /// Type '{Tab}' in 'txtUsername' text box
        /// </summary>
        public string UITxtUsernameEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '********' in 'txtPassword' text box
        /// </summary>
        public string UITxtPasswordEditSendKeys = "ltMtR4VOfdZS3D8xaljxesqUwEXKaQEX";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AddEmployee'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class AddEmployeeParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'admin' in 'txtUsername' text box
        /// </summary>
        public string UITxtUsernameEditText = "admin";
        
        /// <summary>
        /// Type '{Tab}' in 'txtUsername' text box
        /// </summary>
        public string UITxtUsernameEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '********' in 'txtPassword' text box
        /// </summary>
        public string UITxtPasswordEditSendKeys = "5xSDELIxxXx145f01l/EovhmFYRmKaAyG91B0n13RpM=";
        
        /// <summary>
        /// Type 'John Smith' in 'name' text box
        /// </summary>
        public string UINameEditText = "John Smith";
        
        /// <summary>
        /// Type 'jsmith@gmail.com' in 'email' text box
        /// </summary>
        public string UIEmailEditText = "jsmith@gmail.com";
        
        /// <summary>
        /// Select 'Sandwhich Maker' check box
        /// </summary>
        public bool UISandwhichMakerCheckBoxChecked = true;
        
        /// <summary>
        /// Select 'Cashier' check box
        /// </summary>
        public bool UICashierCheckBoxChecked = true;
        
        /// <summary>
        /// Select 'Fry Station' check box
        /// </summary>
        public bool UIFryStationCheckBoxChecked = true;
        
        /// <summary>
        /// Select 'Manager' check box
        /// </summary>
        public bool UIManagerCheckBoxChecked = true;
        
        /// <summary>
        /// Select 'Day Shift' in 'ShiftBox' combo box
        /// </summary>
        public string UIShiftBoxComboBoxSelectedItem = "Day Shift";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CreateRole'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CreateRoleParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'admin' in 'txtUsername' text box
        /// </summary>
        public string UITxtUsernameEditText = "admin";
        
        /// <summary>
        /// Type '{Tab}' in 'txtUsername' text box
        /// </summary>
        public string UITxtUsernameEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '********' in 'txtPassword' text box
        /// </summary>
        public string UITxtPasswordEditSendKeys = "5xSDELIxxXx145f01l/EovhmFYRmKaAyG91B0n13RpM=";
        
        /// <summary>
        /// Type 'Janitor' in 'name' text box
        /// </summary>
        public string UINameEditText = "Janitor";
        
        /// <summary>
        /// Type '1' in 'RoleCountBox' text box
        /// </summary>
        public string UIRoleCountBoxEditText = "1";
        
        /// <summary>
        /// Type 'Cleans the floors and entire store' in 'description' text box
        /// </summary>
        public string UIDescriptionEditText = "Cleans the floors and entire store";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIWpfWindow : WpfWindow
    {
        
        public UIWpfWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            #endregion
        }
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICapstoneEmployeeScheWindow : WpfWindow
    {
        
        public UICapstoneEmployeeScheWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "Capstone Employee Scheduler - Login";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Capstone Employee Scheduler - Login");
            #endregion
        }
        
        #region Properties
        public WpfEdit UITxtUsernameEdit
        {
            get
            {
                if ((this.mUITxtUsernameEdit == null))
                {
                    this.mUITxtUsernameEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUITxtUsernameEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "txtUsername";
                    this.mUITxtUsernameEdit.WindowTitles.Add("Capstone Employee Scheduler - Login");
                    #endregion
                }
                return this.mUITxtUsernameEdit;
            }
        }
        
        public WpfEdit UITxtPasswordEdit
        {
            get
            {
                if ((this.mUITxtPasswordEdit == null))
                {
                    this.mUITxtPasswordEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUITxtPasswordEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "txtPassword";
                    this.mUITxtPasswordEdit.WindowTitles.Add("Capstone Employee Scheduler - Login");
                    #endregion
                }
                return this.mUITxtPasswordEdit;
            }
        }
        
        public WpfText UIPASSWORDText
        {
            get
            {
                if ((this.mUIPASSWORDText == null))
                {
                    this.mUIPASSWORDText = new WpfText(this);
                    #region Search Criteria
                    this.mUIPASSWORDText.SearchProperties[WpfText.PropertyNames.AutomationId] = "tbPassword";
                    this.mUIPASSWORDText.WindowTitles.Add("Capstone Employee Scheduler - Login");
                    #endregion
                }
                return this.mUIPASSWORDText;
            }
        }
        
        public WpfButton UISUBMITButton
        {
            get
            {
                if ((this.mUISUBMITButton == null))
                {
                    this.mUISUBMITButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUISUBMITButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "buttonSubmit";
                    this.mUISUBMITButton.WindowTitles.Add("Capstone Employee Scheduler - Login");
                    #endregion
                }
                return this.mUISUBMITButton;
            }
        }
        
        public WpfText UIUSERNAMEText
        {
            get
            {
                if ((this.mUIUSERNAMEText == null))
                {
                    this.mUIUSERNAMEText = new WpfText(this);
                    #region Search Criteria
                    this.mUIUSERNAMEText.SearchProperties[WpfText.PropertyNames.AutomationId] = "tbUsername";
                    this.mUIUSERNAMEText.WindowTitles.Add("Capstone Employee Scheduler - Login");
                    #endregion
                }
                return this.mUIUSERNAMEText;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUITxtUsernameEdit;
        
        private WpfEdit mUITxtPasswordEdit;
        
        private WpfText mUIPASSWORDText;
        
        private WpfButton mUISUBMITButton;
        
        private WpfText mUIUSERNAMEText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "OK";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Button";
            this.WindowTitles.Add("OK");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("OK");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGenerateScheduleWindow : WinWindow
    {
        
        public UIGenerateScheduleWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Generate Schedule";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Generate Schedule");
            #endregion
        }
        
        #region Properties
        public UIOKWindow1 UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow1(this);
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIOKWindow1 mUIOKWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOKWindow1 : WinWindow
    {
        
        public UIOKWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "2";
            this.WindowTitles.Add("Generate Schedule");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Generate Schedule");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILogoutSuccessfulWindow : WinWindow
    {
        
        public UILogoutSuccessfulWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Logout Successful";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Logout Successful");
            #endregion
        }
        
        #region Properties
        public UIOKWindow2 UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow2(this);
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIOKWindow2 mUIOKWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOKWindow2 : WinWindow
    {
        
        public UIOKWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "2";
            this.WindowTitles.Add("Logout Successful");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Logout Successful");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICapstoneEmployeeScheWindow1 : WpfWindow
    {
        
        public UICapstoneEmployeeScheWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "Capstone Employee Scheduler - Home";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Capstone Employee Scheduler - Home");
            #endregion
        }
        
        #region Properties
        public UIMainPane UIMainPane
        {
            get
            {
                if ((this.mUIMainPane == null))
                {
                    this.mUIMainPane = new UIMainPane(this);
                }
                return this.mUIMainPane;
            }
        }
        
        public WpfButton UIHISTORYButton
        {
            get
            {
                if ((this.mUIHISTORYButton == null))
                {
                    this.mUIHISTORYButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIHISTORYButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "History";
                    this.mUIHISTORYButton.WindowTitles.Add("Capstone Employee Scheduler - Home");
                    #endregion
                }
                return this.mUIHISTORYButton;
            }
        }
        
        public WpfButton UIHOMEButton
        {
            get
            {
                if ((this.mUIHOMEButton == null))
                {
                    this.mUIHOMEButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIHOMEButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "home";
                    this.mUIHOMEButton.WindowTitles.Add("Capstone Employee Scheduler - Home");
                    #endregion
                }
                return this.mUIHOMEButton;
            }
        }
        
        public WpfButton UIEMPLOYEESButton
        {
            get
            {
                if ((this.mUIEMPLOYEESButton == null))
                {
                    this.mUIEMPLOYEESButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIEMPLOYEESButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "Employees";
                    this.mUIEMPLOYEESButton.WindowTitles.Add("Capstone Employee Scheduler - Home");
                    #endregion
                }
                return this.mUIEMPLOYEESButton;
            }
        }
        
        public WpfButton UIROLESButton
        {
            get
            {
                if ((this.mUIROLESButton == null))
                {
                    this.mUIROLESButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIROLESButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "Roles";
                    this.mUIROLESButton.WindowTitles.Add("Capstone Employee Scheduler - Home");
                    #endregion
                }
                return this.mUIROLESButton;
            }
        }
        
        public WpfButton UIScheduleButton
        {
            get
            {
                if ((this.mUIScheduleButton == null))
                {
                    this.mUIScheduleButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIScheduleButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "schedule";
                    this.mUIScheduleButton.WindowTitles.Add("Capstone Employee Scheduler - Home");
                    #endregion
                }
                return this.mUIScheduleButton;
            }
        }
        
        public WpfButton UIAdminButton
        {
            get
            {
                if ((this.mUIAdminButton == null))
                {
                    this.mUIAdminButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIAdminButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "admin";
                    this.mUIAdminButton.WindowTitles.Add("Capstone Employee Scheduler - Home");
                    #endregion
                }
                return this.mUIAdminButton;
            }
        }
        
        public UIItemMenu UIItemMenu
        {
            get
            {
                if ((this.mUIItemMenu == null))
                {
                    this.mUIItemMenu = new UIItemMenu(this);
                }
                return this.mUIItemMenu;
            }
        }
        
        public WpfButton UILOGOUTButton
        {
            get
            {
                if ((this.mUILOGOUTButton == null))
                {
                    this.mUILOGOUTButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUILOGOUTButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "logout";
                    this.mUILOGOUTButton.WindowTitles.Add("Capstone Employee Scheduler - Home");
                    #endregion
                }
                return this.mUILOGOUTButton;
            }
        }
        #endregion
        
        #region Fields
        private UIMainPane mUIMainPane;
        
        private WpfButton mUIHISTORYButton;
        
        private WpfButton mUIHOMEButton;
        
        private WpfButton mUIEMPLOYEESButton;
        
        private WpfButton mUIROLESButton;
        
        private WpfButton mUIScheduleButton;
        
        private WpfButton mUIAdminButton;
        
        private UIItemMenu mUIItemMenu;
        
        private WpfButton mUILOGOUTButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMainPane : WpfPane
    {
        
        public UIMainPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.Frame";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "Main";
            this.WindowTitles.Add("Capstone Employee Scheduler - Home");
            #endregion
        }
        
        #region Properties
        public WpfButton UIGenerateScheduleButton
        {
            get
            {
                if ((this.mUIGenerateScheduleButton == null))
                {
                    this.mUIGenerateScheduleButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIGenerateScheduleButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "GenerateButton";
                    this.mUIGenerateScheduleButton.WindowTitles.Add("Capstone Employee Scheduler - Home");
                    #endregion
                }
                return this.mUIGenerateScheduleButton;
            }
        }
        
        public WpfButton UINewEmployeeButton
        {
            get
            {
                if ((this.mUINewEmployeeButton == null))
                {
                    this.mUINewEmployeeButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUINewEmployeeButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "NewEmployee";
                    this.mUINewEmployeeButton.WindowTitles.Add("Capstone Employee Scheduler - Home");
                    #endregion
                }
                return this.mUINewEmployeeButton;
            }
        }
        
        public WpfButton UINewRoleButton
        {
            get
            {
                if ((this.mUINewRoleButton == null))
                {
                    this.mUINewRoleButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUINewRoleButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "NewRole";
                    this.mUINewRoleButton.WindowTitles.Add("Capstone Employee Scheduler - Home");
                    #endregion
                }
                return this.mUINewRoleButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mUIGenerateScheduleButton;
        
        private WpfButton mUINewEmployeeButton;
        
        private WpfButton mUINewRoleButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemMenu : WpfMenu
    {
        
        public UIItemMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Capstone Employee Scheduler - Home");
            #endregion
        }
        
        #region Properties
        public UIFileMenuItem UIFileMenuItem
        {
            get
            {
                if ((this.mUIFileMenuItem == null))
                {
                    this.mUIFileMenuItem = new UIFileMenuItem(this);
                }
                return this.mUIFileMenuItem;
            }
        }
        
        public UIScheduleMenuItem UIScheduleMenuItem
        {
            get
            {
                if ((this.mUIScheduleMenuItem == null))
                {
                    this.mUIScheduleMenuItem = new UIScheduleMenuItem(this);
                }
                return this.mUIScheduleMenuItem;
            }
        }
        
        public UIRolesMenuItem UIRolesMenuItem
        {
            get
            {
                if ((this.mUIRolesMenuItem == null))
                {
                    this.mUIRolesMenuItem = new UIRolesMenuItem(this);
                }
                return this.mUIRolesMenuItem;
            }
        }
        
        public UIEmployeesMenuItem UIEmployeesMenuItem
        {
            get
            {
                if ((this.mUIEmployeesMenuItem == null))
                {
                    this.mUIEmployeesMenuItem = new UIEmployeesMenuItem(this);
                }
                return this.mUIEmployeesMenuItem;
            }
        }
        
        public WpfMenuItem UIExportMenuItem
        {
            get
            {
                if ((this.mUIExportMenuItem == null))
                {
                    this.mUIExportMenuItem = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mUIExportMenuItem.SearchProperties[WpfMenuItem.PropertyNames.Name] = "Export";
                    this.mUIExportMenuItem.WindowTitles.Add("Capstone Employee Scheduler - Home");
                    #endregion
                }
                return this.mUIExportMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private UIFileMenuItem mUIFileMenuItem;
        
        private UIScheduleMenuItem mUIScheduleMenuItem;
        
        private UIRolesMenuItem mUIRolesMenuItem;
        
        private UIEmployeesMenuItem mUIEmployeesMenuItem;
        
        private WpfMenuItem mUIExportMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIFileMenuItem : WpfMenuItem
    {
        
        public UIFileMenuItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfMenuItem.PropertyNames.Name] = "File";
            this.WindowTitles.Add("Capstone Employee Scheduler - Home");
            #endregion
        }
        
        #region Properties
        public UINewMenuItem UINewMenuItem
        {
            get
            {
                if ((this.mUINewMenuItem == null))
                {
                    this.mUINewMenuItem = new UINewMenuItem(this);
                }
                return this.mUINewMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private UINewMenuItem mUINewMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINewMenuItem : WpfMenuItem
    {
        
        public UINewMenuItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfMenuItem.PropertyNames.Name] = "New";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.WindowTitles.Add("Capstone Employee Scheduler - Home");
            #endregion
        }
        
        #region Properties
        public WpfMenuItem UIEmployeeMenuItem
        {
            get
            {
                if ((this.mUIEmployeeMenuItem == null))
                {
                    this.mUIEmployeeMenuItem = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mUIEmployeeMenuItem.SearchProperties[WpfMenuItem.PropertyNames.Name] = "Employee";
                    this.mUIEmployeeMenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIEmployeeMenuItem.WindowTitles.Add("Capstone Employee Scheduler - Home");
                    #endregion
                }
                return this.mUIEmployeeMenuItem;
            }
        }
        
        public WpfMenuItem UIRoleMenuItem
        {
            get
            {
                if ((this.mUIRoleMenuItem == null))
                {
                    this.mUIRoleMenuItem = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mUIRoleMenuItem.SearchProperties[WpfMenuItem.PropertyNames.Name] = "Role";
                    this.mUIRoleMenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIRoleMenuItem.WindowTitles.Add("Capstone Employee Scheduler - Home");
                    #endregion
                }
                return this.mUIRoleMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfMenuItem mUIEmployeeMenuItem;
        
        private WpfMenuItem mUIRoleMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIScheduleMenuItem : WpfMenuItem
    {
        
        public UIScheduleMenuItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfMenuItem.PropertyNames.Name] = "Schedule";
            this.WindowTitles.Add("Capstone Employee Scheduler - Home");
            #endregion
        }
        
        #region Properties
        public WpfMenuItem UIViewMenuItem
        {
            get
            {
                if ((this.mUIViewMenuItem == null))
                {
                    this.mUIViewMenuItem = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mUIViewMenuItem.SearchProperties[WpfMenuItem.PropertyNames.Name] = "View";
                    this.mUIViewMenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIViewMenuItem.WindowTitles.Add("Capstone Employee Scheduler - Home");
                    #endregion
                }
                return this.mUIViewMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfMenuItem mUIViewMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRolesMenuItem : WpfMenuItem
    {
        
        public UIRolesMenuItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfMenuItem.PropertyNames.Name] = "Roles";
            this.WindowTitles.Add("Capstone Employee Scheduler - Home");
            #endregion
        }
        
        #region Properties
        public WpfMenuItem UINewMenuItem
        {
            get
            {
                if ((this.mUINewMenuItem == null))
                {
                    this.mUINewMenuItem = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mUINewMenuItem.SearchProperties[WpfMenuItem.PropertyNames.Name] = "New";
                    this.mUINewMenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUINewMenuItem.WindowTitles.Add("Capstone Employee Scheduler - Home");
                    #endregion
                }
                return this.mUINewMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfMenuItem mUINewMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEmployeesMenuItem : WpfMenuItem
    {
        
        public UIEmployeesMenuItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfMenuItem.PropertyNames.Name] = "Employees";
            this.WindowTitles.Add("Capstone Employee Scheduler - Home");
            #endregion
        }
        
        #region Properties
        public WpfMenuItem UINewMenuItem
        {
            get
            {
                if ((this.mUINewMenuItem == null))
                {
                    this.mUINewMenuItem = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mUINewMenuItem.SearchProperties[WpfMenuItem.PropertyNames.Name] = "New";
                    this.mUINewMenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUINewMenuItem.WindowTitles.Add("Capstone Employee Scheduler - Home");
                    #endregion
                }
                return this.mUINewMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfMenuItem mUINewMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDebugWindow : WinWindow
    {
        
        public UIDebugWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Debug";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "CabinetWClass";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Items View";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public UICapstoneEmployeeScheListItem UICapstoneEmployeeScheListItem
        {
            get
            {
                if ((this.mUICapstoneEmployeeScheListItem == null))
                {
                    this.mUICapstoneEmployeeScheListItem = new UICapstoneEmployeeScheListItem(this);
                }
                return this.mUICapstoneEmployeeScheListItem;
            }
        }
        #endregion
        
        #region Fields
        private UICapstoneEmployeeScheListItem mUICapstoneEmployeeScheListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICapstoneEmployeeScheListItem : WinListItem
    {
        
        public UICapstoneEmployeeScheListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinListItem.PropertyNames.Name] = "CapstoneEmployeeScheduler.exe";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public WinEdit UINameEdit
        {
            get
            {
                if ((this.mUINameEdit == null))
                {
                    this.mUINameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUINameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Name";
                    this.mUINameEdit.WindowTitles.Add("Debug");
                    #endregion
                }
                return this.mUINameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICapstoneEmployeeScheWindow2 : WinWindow
    {
        
        public UICapstoneEmployeeScheWindow2()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Capstone Employee Scheduler - Roles Modal";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Capstone Employee Scheduler - Roles Modal");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Capstone Employee Scheduler - Roles Modal");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICapstoneEmployeeScheWindow3 : WinWindow
    {
        
        public UICapstoneEmployeeScheWindow3()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Capstone Employee Scheduler - Employee Modal";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Capstone Employee Scheduler - Employee Modal");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Capstone Employee Scheduler - Employee Modal");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICapstoneEmployeeScheWindow21 : WpfWindow
    {
        
        public UICapstoneEmployeeScheWindow21()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "Capstone Employee Scheduler - Employee Modal";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Capstone Employee Scheduler - Employee Modal");
            #endregion
        }
        
        #region Properties
        public WpfEdit UINameEdit
        {
            get
            {
                if ((this.mUINameEdit == null))
                {
                    this.mUINameEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUINameEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "name";
                    this.mUINameEdit.WindowTitles.Add("Capstone Employee Scheduler - Employee Modal");
                    #endregion
                }
                return this.mUINameEdit;
            }
        }
        
        public WpfEdit UIEmailEdit
        {
            get
            {
                if ((this.mUIEmailEdit == null))
                {
                    this.mUIEmailEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIEmailEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "email";
                    this.mUIEmailEdit.WindowTitles.Add("Capstone Employee Scheduler - Employee Modal");
                    #endregion
                }
                return this.mUIEmailEdit;
            }
        }
        
        public UIRoleListBoxList UIRoleListBoxList
        {
            get
            {
                if ((this.mUIRoleListBoxList == null))
                {
                    this.mUIRoleListBoxList = new UIRoleListBoxList(this);
                }
                return this.mUIRoleListBoxList;
            }
        }
        
        public WpfComboBox UIShiftBoxComboBox
        {
            get
            {
                if ((this.mUIShiftBoxComboBox == null))
                {
                    this.mUIShiftBoxComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mUIShiftBoxComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "ShiftBox";
                    this.mUIShiftBoxComboBox.WindowTitles.Add("Capstone Employee Scheduler - Employee Modal");
                    #endregion
                }
                return this.mUIShiftBoxComboBox;
            }
        }
        
        public WpfButton UISUBMITButton
        {
            get
            {
                if ((this.mUISUBMITButton == null))
                {
                    this.mUISUBMITButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUISUBMITButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "submit";
                    this.mUISUBMITButton.WindowTitles.Add("Capstone Employee Scheduler - Employee Modal");
                    #endregion
                }
                return this.mUISUBMITButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUINameEdit;
        
        private WpfEdit mUIEmailEdit;
        
        private UIRoleListBoxList mUIRoleListBoxList;
        
        private WpfComboBox mUIShiftBoxComboBox;
        
        private WpfButton mUISUBMITButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleListBoxList : WpfList
    {
        
        public UIRoleListBoxList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfList.PropertyNames.AutomationId] = "roleListBox";
            this.WindowTitles.Add("Capstone Employee Scheduler - Employee Modal");
            #endregion
        }
        
        #region Properties
        public UICapstoneEmployeeScheListItem1 UICapstoneEmployeeScheListItem
        {
            get
            {
                if ((this.mUICapstoneEmployeeScheListItem == null))
                {
                    this.mUICapstoneEmployeeScheListItem = new UICapstoneEmployeeScheListItem1(this);
                }
                return this.mUICapstoneEmployeeScheListItem;
            }
        }
        
        public UICapstoneEmployeeScheListItem11 UICapstoneEmployeeScheListItem1
        {
            get
            {
                if ((this.mUICapstoneEmployeeScheListItem1 == null))
                {
                    this.mUICapstoneEmployeeScheListItem1 = new UICapstoneEmployeeScheListItem11(this);
                }
                return this.mUICapstoneEmployeeScheListItem1;
            }
        }
        
        public UICapstoneEmployeeScheListItem2 UICapstoneEmployeeScheListItem2
        {
            get
            {
                if ((this.mUICapstoneEmployeeScheListItem2 == null))
                {
                    this.mUICapstoneEmployeeScheListItem2 = new UICapstoneEmployeeScheListItem2(this);
                }
                return this.mUICapstoneEmployeeScheListItem2;
            }
        }
        
        public UICapstoneEmployeeScheListItem3 UICapstoneEmployeeScheListItem3
        {
            get
            {
                if ((this.mUICapstoneEmployeeScheListItem3 == null))
                {
                    this.mUICapstoneEmployeeScheListItem3 = new UICapstoneEmployeeScheListItem3(this);
                }
                return this.mUICapstoneEmployeeScheListItem3;
            }
        }
        #endregion
        
        #region Fields
        private UICapstoneEmployeeScheListItem1 mUICapstoneEmployeeScheListItem;
        
        private UICapstoneEmployeeScheListItem11 mUICapstoneEmployeeScheListItem1;
        
        private UICapstoneEmployeeScheListItem2 mUICapstoneEmployeeScheListItem2;
        
        private UICapstoneEmployeeScheListItem3 mUICapstoneEmployeeScheListItem3;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICapstoneEmployeeScheListItem1 : WpfListItem
    {
        
        public UICapstoneEmployeeScheListItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "CapstoneEmployeeScheduler.Models.Role";
            this.WindowTitles.Add("Capstone Employee Scheduler - Employee Modal");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox UISandwhichMakerCheckBox
        {
            get
            {
                if ((this.mUISandwhichMakerCheckBox == null))
                {
                    this.mUISandwhichMakerCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mUISandwhichMakerCheckBox.SearchProperties[WpfCheckBox.PropertyNames.Name] = "Sandwhich Maker";
                    this.mUISandwhichMakerCheckBox.WindowTitles.Add("Capstone Employee Scheduler - Employee Modal");
                    #endregion
                }
                return this.mUISandwhichMakerCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mUISandwhichMakerCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICapstoneEmployeeScheListItem11 : WpfListItem
    {
        
        public UICapstoneEmployeeScheListItem11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "CapstoneEmployeeScheduler.Models.Role";
            this.SearchProperties[WpfListItem.PropertyNames.Instance] = "4";
            this.WindowTitles.Add("Capstone Employee Scheduler - Employee Modal");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox UICashierCheckBox
        {
            get
            {
                if ((this.mUICashierCheckBox == null))
                {
                    this.mUICashierCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mUICashierCheckBox.SearchProperties[WpfCheckBox.PropertyNames.Name] = "Cashier";
                    this.mUICashierCheckBox.WindowTitles.Add("Capstone Employee Scheduler - Employee Modal");
                    #endregion
                }
                return this.mUICashierCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mUICashierCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICapstoneEmployeeScheListItem2 : WpfListItem
    {
        
        public UICapstoneEmployeeScheListItem2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "CapstoneEmployeeScheduler.Models.Role";
            this.SearchProperties[WpfListItem.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Capstone Employee Scheduler - Employee Modal");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox UIFryStationCheckBox
        {
            get
            {
                if ((this.mUIFryStationCheckBox == null))
                {
                    this.mUIFryStationCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mUIFryStationCheckBox.SearchProperties[WpfCheckBox.PropertyNames.Name] = "Fry Station";
                    this.mUIFryStationCheckBox.WindowTitles.Add("Capstone Employee Scheduler - Employee Modal");
                    #endregion
                }
                return this.mUIFryStationCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mUIFryStationCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICapstoneEmployeeScheListItem3 : WpfListItem
    {
        
        public UICapstoneEmployeeScheListItem3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "CapstoneEmployeeScheduler.Models.Role";
            this.SearchProperties[WpfListItem.PropertyNames.Instance] = "6";
            this.WindowTitles.Add("Capstone Employee Scheduler - Employee Modal");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox UIManagerCheckBox
        {
            get
            {
                if ((this.mUIManagerCheckBox == null))
                {
                    this.mUIManagerCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mUIManagerCheckBox.SearchProperties[WpfCheckBox.PropertyNames.Name] = "Manager";
                    this.mUIManagerCheckBox.WindowTitles.Add("Capstone Employee Scheduler - Employee Modal");
                    #endregion
                }
                return this.mUIManagerCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mUIManagerCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICapstoneEmployeeScheWindow22 : WpfWindow
    {
        
        public UICapstoneEmployeeScheWindow22()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "Capstone Employee Scheduler - Roles Modal";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Capstone Employee Scheduler - Roles Modal");
            #endregion
        }
        
        #region Properties
        public WpfEdit UINameEdit
        {
            get
            {
                if ((this.mUINameEdit == null))
                {
                    this.mUINameEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUINameEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "name";
                    this.mUINameEdit.WindowTitles.Add("Capstone Employee Scheduler - Roles Modal");
                    #endregion
                }
                return this.mUINameEdit;
            }
        }
        
        public WpfText UIMAXPEOPLEPERROLEText
        {
            get
            {
                if ((this.mUIMAXPEOPLEPERROLEText == null))
                {
                    this.mUIMAXPEOPLEPERROLEText = new WpfText(this);
                    #region Search Criteria
                    this.mUIMAXPEOPLEPERROLEText.SearchProperties[WpfText.PropertyNames.Name] = "MAX PEOPLE PER ROLE:";
                    this.mUIMAXPEOPLEPERROLEText.WindowTitles.Add("Capstone Employee Scheduler - Roles Modal");
                    #endregion
                }
                return this.mUIMAXPEOPLEPERROLEText;
            }
        }
        
        public WpfEdit UIRoleCountBoxEdit
        {
            get
            {
                if ((this.mUIRoleCountBoxEdit == null))
                {
                    this.mUIRoleCountBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIRoleCountBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "RoleCountBox";
                    this.mUIRoleCountBoxEdit.WindowTitles.Add("Capstone Employee Scheduler - Roles Modal");
                    #endregion
                }
                return this.mUIRoleCountBoxEdit;
            }
        }
        
        public WpfEdit UIDescriptionEdit
        {
            get
            {
                if ((this.mUIDescriptionEdit == null))
                {
                    this.mUIDescriptionEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIDescriptionEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "description";
                    this.mUIDescriptionEdit.WindowTitles.Add("Capstone Employee Scheduler - Roles Modal");
                    #endregion
                }
                return this.mUIDescriptionEdit;
            }
        }
        
        public WpfButton UISUBMITButton
        {
            get
            {
                if ((this.mUISUBMITButton == null))
                {
                    this.mUISUBMITButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUISUBMITButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "submit";
                    this.mUISUBMITButton.WindowTitles.Add("Capstone Employee Scheduler - Roles Modal");
                    #endregion
                }
                return this.mUISUBMITButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUINameEdit;
        
        private WpfText mUIMAXPEOPLEPERROLEText;
        
        private WpfEdit mUIRoleCountBoxEdit;
        
        private WpfEdit mUIDescriptionEdit;
        
        private WpfButton mUISUBMITButton;
        #endregion
    }
}
