// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 15.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace BehaviorTests
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// LoginTest - Use 'LoginTestParams' to pass parameters into this method.
        /// </summary>
        public void LoginTest()
        {
            #region Variable Declarations
            WpfEdit uITxtUsernameEdit = this.UICapstoneEmployeeScheWindow.UITxtUsernameEdit;
            WpfText uIPASSWORDText = this.UICapstoneEmployeeScheWindow.UIPASSWORDText;
            WpfEdit uITxtPasswordEdit = this.UICapstoneEmployeeScheWindow.UITxtPasswordEdit;
            WpfButton uISUBMITButton = this.UICapstoneEmployeeScheWindow.UISUBMITButton;
            #endregion

            // Launch '%USERPROFILE%\Desktop\CapstoneEmployeeScheduler.exe'
            ApplicationUnderTest uICapstoneEmployeeScheWindow = ApplicationUnderTest.Launch(this.LoginTestParams.UICapstoneEmployeeScheWindowExePath, this.LoginTestParams.UICapstoneEmployeeScheWindowAlternateExePath);

            // Type 'admin' in 'txtUsername' text box
            uITxtUsernameEdit.Text = this.LoginTestParams.UITxtUsernameEditText;

            // Click 'PASSWORD' label
            Mouse.Click(uIPASSWORDText, new Point(45, 4));

            // Type '********' in 'txtPassword' text box
            Keyboard.SendKeys(uITxtPasswordEdit, this.LoginTestParams.UITxtPasswordEditSendKeys, true);

            // Click 'SUBMIT' button
            Mouse.Click(uISUBMITButton, new Point(42, 20));
        }
        
        #region Properties
        public virtual LoginTestParams LoginTestParams
        {
            get
            {
                if ((this.mLoginTestParams == null))
                {
                    this.mLoginTestParams = new LoginTestParams();
                }
                return this.mLoginTestParams;
            }
        }
        
        public UIWpfWindow UIWpfWindow
        {
            get
            {
                if ((this.mUIWpfWindow == null))
                {
                    this.mUIWpfWindow = new UIWpfWindow();
                }
                return this.mUIWpfWindow;
            }
        }
        
        public UICapstoneEmployeeScheWindow UICapstoneEmployeeScheWindow
        {
            get
            {
                if ((this.mUICapstoneEmployeeScheWindow == null))
                {
                    this.mUICapstoneEmployeeScheWindow = new UICapstoneEmployeeScheWindow();
                }
                return this.mUICapstoneEmployeeScheWindow;
            }
        }
        
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow();
                }
                return this.mUIOKWindow;
            }
        }
        
        public UIGenerateScheduleWindow UIGenerateScheduleWindow
        {
            get
            {
                if ((this.mUIGenerateScheduleWindow == null))
                {
                    this.mUIGenerateScheduleWindow = new UIGenerateScheduleWindow();
                }
                return this.mUIGenerateScheduleWindow;
            }
        }
        
        public UILogoutSuccessfulWindow UILogoutSuccessfulWindow
        {
            get
            {
                if ((this.mUILogoutSuccessfulWindow == null))
                {
                    this.mUILogoutSuccessfulWindow = new UILogoutSuccessfulWindow();
                }
                return this.mUILogoutSuccessfulWindow;
            }
        }
        #endregion
        
        #region Fields
        private LoginTestParams mLoginTestParams;
        
        private UIWpfWindow mUIWpfWindow;
        
        private UICapstoneEmployeeScheWindow mUICapstoneEmployeeScheWindow;
        
        private UIOKWindow mUIOKWindow;
        
        private UIGenerateScheduleWindow mUIGenerateScheduleWindow;
        
        private UILogoutSuccessfulWindow mUILogoutSuccessfulWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'LoginTest'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class LoginTestParams
    {
        
        #region Fields
        /// <summary>
        /// Launch '%USERPROFILE%\Desktop\CapstoneEmployeeScheduler.exe'
        /// </summary>
        public string UICapstoneEmployeeScheWindowExePath = "C:\\Users\\Da Jew\\Desktop\\CapstoneEmployeeScheduler.exe";
        
        /// <summary>
        /// Launch '%USERPROFILE%\Desktop\CapstoneEmployeeScheduler.exe'
        /// </summary>
        public string UICapstoneEmployeeScheWindowAlternateExePath = "%USERPROFILE%\\Desktop\\CapstoneEmployeeScheduler.exe";
        
        /// <summary>
        /// Type 'admin' in 'txtUsername' text box
        /// </summary>
        public string UITxtUsernameEditText = "admin";
        
        /// <summary>
        /// Type '********' in 'txtPassword' text box
        /// </summary>
        public string UITxtPasswordEditSendKeys = "ltMtR4VOfdZS3D8xaljxesqUwEXKaQEX";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIWpfWindow : WpfWindow
    {
        
        public UIWpfWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            #endregion
        }
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICapstoneEmployeeScheWindow : WpfWindow
    {
        
        public UICapstoneEmployeeScheWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "Capstone Employee Scheduler - Login";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Capstone Employee Scheduler - Login");
            #endregion
        }
        
        #region Properties
        public WpfEdit UITxtUsernameEdit
        {
            get
            {
                if ((this.mUITxtUsernameEdit == null))
                {
                    this.mUITxtUsernameEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUITxtUsernameEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "txtUsername";
                    this.mUITxtUsernameEdit.WindowTitles.Add("Capstone Employee Scheduler - Login");
                    #endregion
                }
                return this.mUITxtUsernameEdit;
            }
        }
        
        public WpfEdit UITxtPasswordEdit
        {
            get
            {
                if ((this.mUITxtPasswordEdit == null))
                {
                    this.mUITxtPasswordEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUITxtPasswordEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "txtPassword";
                    this.mUITxtPasswordEdit.WindowTitles.Add("Capstone Employee Scheduler - Login");
                    #endregion
                }
                return this.mUITxtPasswordEdit;
            }
        }
        
        public WpfText UIPASSWORDText
        {
            get
            {
                if ((this.mUIPASSWORDText == null))
                {
                    this.mUIPASSWORDText = new WpfText(this);
                    #region Search Criteria
                    this.mUIPASSWORDText.SearchProperties[WpfText.PropertyNames.AutomationId] = "tbPassword";
                    this.mUIPASSWORDText.WindowTitles.Add("Capstone Employee Scheduler - Login");
                    #endregion
                }
                return this.mUIPASSWORDText;
            }
        }
        
        public WpfButton UISUBMITButton
        {
            get
            {
                if ((this.mUISUBMITButton == null))
                {
                    this.mUISUBMITButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUISUBMITButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "buttonSubmit";
                    this.mUISUBMITButton.WindowTitles.Add("Capstone Employee Scheduler - Login");
                    #endregion
                }
                return this.mUISUBMITButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUITxtUsernameEdit;
        
        private WpfEdit mUITxtPasswordEdit;
        
        private WpfText mUIPASSWORDText;
        
        private WpfButton mUISUBMITButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "OK";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Button";
            this.WindowTitles.Add("OK");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("OK");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGenerateScheduleWindow : WinWindow
    {
        
        public UIGenerateScheduleWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Generate Schedule";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Generate Schedule");
            #endregion
        }
        
        #region Properties
        public UIOKWindow1 UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow1(this);
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIOKWindow1 mUIOKWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOKWindow1 : WinWindow
    {
        
        public UIOKWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "2";
            this.WindowTitles.Add("Generate Schedule");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Generate Schedule");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILogoutSuccessfulWindow : WinWindow
    {
        
        public UILogoutSuccessfulWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Logout Successful";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Logout Successful");
            #endregion
        }
        
        #region Properties
        public UIOKWindow2 UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow2(this);
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIOKWindow2 mUIOKWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOKWindow2 : WinWindow
    {
        
        public UIOKWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "2";
            this.WindowTitles.Add("Logout Successful");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Logout Successful");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
}
